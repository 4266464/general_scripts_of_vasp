# -*- coding: utf-8 -*-
"""
Created on Fri Aug  6 11:37:36 2021

@author: dugue
"""
import matplotlib.pyplot as plt
import numpy as np
np.linspace(0,1.2537196171127465,11)
np.linspace(1.2537196171127465,1.2537196171127465+0.9110597034955133,11)
np.linspace(1.2537196171127465+0.9110597034955133,1.2537196171127465+0.9110597034955133+0.874709943352652,11)

# grd=[
# 2.62807,
# 2.62807,
# 2.62807,
# 2.62807,
# 2.62807,
# 2.62807,
# 2.54009,
# 2.54009,
# 2.52142,
# 2.52142,
# 2.52142,
# 2.52142,
# 2.54009,
# 2.54009,
# 2.52142,
# 2.52142,
# 2.52142,
# 2.52142,
# 2.54009,
# 2.54009,
# 2.52142,
# 2.52142,
# 2.52142,
# 2.52142]

# ez=[
# 2.88095,
# 2.88095,
# 2.50434,
# 2.50434,
# 2.50377,
# 2.50377,
# 2.55684,
# 2.55684,
# 2.54398,
# 2.54398,
# 2.48227,
# 2.48227,
# 2.55684,
# 2.55684,
# 2.54398,
# 2.54398,
# 2.48227,
# 2.48227,
# 2.53682,
# 2.53682,
# 2.53677,
# 2.53677,
# 2.52363,
# 2.52363]

# cb=[
# 2.48345,
# 2.48345,
# 2.48345,
# 2.48345,
# 2.48343,
# 2.48343,
# 2.59089,
# 2.59089,
# 2.59087,
# 2.59087,
# 2.56921,
# 2.56921,
# 2.59089,
# 2.59089,
# 2.59087,
# 2.59087,
# 2.56921,
# 2.56921,
# 2.59089,
# 2.59089,
# 2.59087,
# 2.59087,
# 2.56921,
# 2.56921]

# for i in [[cb,ez],[ez,grd],[grd,cb]]:
#     sum=0
#     for j,k in zip(*i):
#         sum+=(j-k)**2
#     sum/=len(i[0])
#     sum=sum**0.5
#     print(sum)

# 0.12537196171127465
# 0.09110597034955133
# 0.0874709943352652
a=[[0.00000000,-182.43278324,"ocb"],
[0.12537196,-182.40846570,"ocb"],
[0.25074392,-182.34942065,"ocb"],
[0.37611589,-182.26088286,"ocb"],
[0.50148785,-182.14361761,"ocb"],
[0.62685981,-181.99914360,"ocb"],
[0.75223177,-181.82720592,"ocb"],
[0.87760373,-181.63041069,"ocb"],
[1.00297569,-181.41018838,"ocb"],
[1.12834766,-181.16664528,"ocb"],
[1.25371962,-180.90039701,"ocb"],
[1.34482559,-180.98688321,"ocb"],
[1.43593156,-181.06414003,"ocb"],
[1.52703753,-181.13211217,"ocb"],
[1.61814350,-181.19215047,"ocb"],
[1.70924947,-181.24220070,"ocb"],
[1.80035544,-181.28589837,"ocb"],
[1.89146141,-181.31820044,"ocb"],
[1.98256738,-181.34472712,"ocb"],
[2.07367335,-181.36235925,"ocb"],
[2.16477932,-181.37087953,"ocb"],
[2.25225031,-181.56409560,"ocb"],
[2.33972131,-181.74153378,"ocb"],
[2.42719230,-181.89464803,"ocb"],
[2.51466330,-182.03193134,"ocb"],
[2.60213429,-182.14842810,"ocb"],
[2.68960529,-182.24367356,"ocb"],
[2.77707628,-182.31940473,"ocb"],
[2.86454728,-182.37744222,"ocb"],
[2.95201827,-182.41562297,"ocb"],
[3.03948926,-182.43278324,"ocb"],
[0.37611589,-181.3806125,"oez"],
[0.50148785,-181.5804685,"oez"],
[0.62685981,-181.7530774,"oez"],
[0.75223177,-181.8932877,"oez"],
[0.87760373,-182.0029621,"oez"],
[1.00297569,-182.0827194,"oez"],
[1.12834766,-182.1293719,"oez"],
[1.25371962,-182.1457578,"oez"],
[1.34482559,-182.1386653,"oez"],
[1.43593156,-182.1182637,"oez"],
[1.52703753,-182.0881032,"oez"],
[1.6181435,-182.0478679,"oez"],
[1.70924947,-181.9958709,"oez"],
[1.80035544,-181.9367872,"oez"],
[1.89146141,-181.8717895,"oez"],
[1.98256738,-181.8170106,"oez"],
[2.07367335,-181.7710094,"oez"],
[2.16477932,-181.7435045,"oez"],
[2.25225031,-181.7279074,"oez"],
[2.33972131,-181.6925871,"oez"],
[2.4271923,-181.6360906,"oez"],
[2.5146633,-181.5595597,"oez"],
[2.60213429,-181.4625021,"oez"],
[0,-182.49446	,"cb"],
[0.12537196,-182.47688	,"cb"],
[0.25074392,-182.42252	,"cb"],
[0.37611589,-182.33784	,"cb"],
[0.50148785,-182.2239	,"cb"],
[0.62685981,-181.78603	,"ez"],
[0.75223177,-181.92911	,"ez"],
[0.87760373,-182.04055	,"ez"],
[1.00297569,-182.12049	,"ez"],
[1.12834766,-182.169	,"ez"],
[1.25371962,-182.18669	,"ez"],
[1.34482559,-182.1803	,"ez"],
[1.43593156,-182.16248	,"ez"],
[1.52703753,-182.13372	,"ez"],
[1.6181435,-182.09392	,"ez"],
[1.70924947,-182.04412	,"ez"],
[1.80035544,-181.98625	,"ez"],
[1.89146141,-181.92391	,"ez"],
[1.98256738,-181.86603	,"ez"],
[2.07367335,-181.80933	,"ez"],
[2.16477932,-181.77563	,"ez"],
[2.16477932,-181.45643	,"cb"],
[2.25225031,-181.65035	,"cb"],
[2.33972131,-181.82512	,"cb"],
[2.4271923,-181.98012	,"cb"],
[2.5146633,-182.11539	,"cb"],
[2.60213429,-182.23015	,"cb"],
[2.68960529,-182.32369	,"cb"],
[2.77707628,-182.3968	,"cb"],
[2.86454728,-182.451	,"cb"],
[2.95201827,-182.48479	,"cb"],
[3.03948926,-182.49504	,"cb"],
[0,-184.40333,"grd"],
[0.12537196,-184.60498,"grd"],
[0.25074392,-184.76733,"grd"],
[0.37611589,-184.89575,"grd"],
[0.50148785,-184.99083,"grd"],
[0.62685981,-185.05387,"grd"],
[0.75223177,-185.08516,"grd"],
[0.87760373,-185.08671,"grd"],
[1.00297569,-185.05962,"grd"],
[1.12834766,-185.00476,"grd"],
[1.25371962,-184.92304,"grd"],
[1.34482559,-185.03285,"grd"],
[1.43593156,-185.13097,"grd"],
[1.52703753,-185.21766,"grd"],
[1.6181435,-185.29261,"grd"],
[1.70924947,-185.35564,"grd"],
[1.80035544,-185.40811,"grd"],
[1.89146141,-185.44922,"grd"],
[1.98256738,-185.47922,"grd"],
[2.07367335,-185.49777,"grd"],
[2.16477932,-185.50429,"grd"],
[2.25225031,-185.4947,"grd"],
[2.33972131,-185.46266,"grd"],
[2.4271923,-185.4078,"grd"],
[2.5146633,-185.33036,"grd"],
[2.60213429,-185.22995,"grd"],
[2.68960529,-185.10654,"grd"],
[2.77707628,-184.96132,"grd"],
[2.86454728,-184.79663,"grd"],
[2.95201827,-184.61122,"grd"],
[3.03948926,-184.40333,"grd"],]

y=list(zip(*a))[1]
ymax=max(y)
ymin=min(y)

f,(ax,ax2)=plt.subplots(2,1,sharex=True)

color_dict={"cb":"red",
            "ez":"blue",
            "ocb":"orange",
            "oez":"cyan"}
for i in a:
    if i[2]=="grd":
        ax2.scatter(i[0],i[1]-ymin,color="green")
    else:
        ax.scatter(i[0],i[1]-ymin,color=color_dict[i[2]])

ax.set_ylim(2.7,5)
ax2.set_ylim(-0.1,1.3)
ax.spines['bottom'].set_visible(False)
ax2.spines['top'].set_visible(False)
ax.xaxis.tick_top()
ax.tick_params(labeltop=False)
ax2.xaxis.tick_bottom()
d=.015
kwargs=dict(transform=ax.transAxes,color='k',clip_on=False)
ax.plot((-d,+d),(-d,+d),**kwargs)
ax.plot((1-d,1+d),(-d,+d),**kwargs)

kwargs.update(transform=ax2.transAxes)
ax2.plot((-d,+d),(1-d,1+d),**kwargs)
ax2.plot((1-d,1+d),(1-d,1+d),**kwargs)
#plt.subplots_adjust(left=0.125,bottom=0.1,right=0.9,top=0.9,wspace=0.2,hspace=0.35)
plt.subplots_adjust(hspace=0.1)
for i in [0,1.2537196171127465,2.16477932,3.03948926]:
    ax.plot([i,i],[2.6,5],"b--")
    ax2.plot([i,i],[-0.1,1.4],"b--")
plt.xticks([0,1.2537196171127465,2.16477932,3.03948926],["cb","ez","grd","cb"],fontsize=18)
plt.xlabel("Geometry configuration",fontsize=18)
plt.ylabel("Energy (eV)",fontsize=18)
plt.tight_layout()
#plt.show()
plt.savefig("zz2z.png",dpi=300)



# y=list(zip(*a))[1]
# ymax=max(y)
# ymin=min(y)

# # f,(ax,ax2)=plt.subplots(2,1,sharex=True)

# for i in a:
#     if len(i)==3:
#         if i[2]=="cb":
#             plt.scatter(i[0],i[1]-ymin,color="red")
#         else:
#             plt.scatter(i[0],i[1]-ymin,color="blue")
#     else:
#         plt.scatter(i[0],i[1]-ymin,color="green")
# # ax.set_ylim(.78, 1.)
# # ax2.set_ylim(.78, 1.)
# for i in [0,1.2537196171127465,2.16477932,3.03948926]:
#     plt.plot([i,i],[0,ymax-ymin],"b--")
# plt.xticks([0,1.2537196171127465,2.16477932,3.03948926],["cb","ez","grd","cb"])
# plt.savefig("zzz.png",dpi=300)
