import numpy as np
import matplotlib
import matplotlib.pyplot as plt

energy = [[0.0, 0.0, -115.25804],
          [0.0, 0.1, -115.21942],
          [0.0, 0.2, -115.19228],
          [0.0, 0.3, -115.17447],
          [0.0, 0.4, -115.161],
          [0.0, 0.5, -115.15036],
          [0.0, 0.6, -115.13605],
          [0.0, 0.7, -115.12315],
          [0.0, 0.8, -115.10183],
          [0.0, 0.9, -115.08213],
          [0.0, 1.0, -115.0602],
          [0.1, 0.0, -115.36241],
          [0.1, 0.1, -115.31848],
          [0.1, 0.2, -115.2849],
          [0.1, 0.3, -115.26078],
          [0.1, 0.4, -115.24429],
          [0.1, 0.5, -115.23151],
          [0.1, 0.6, -115.21761],
          [0.1, 0.7, -115.20019],
          [0.1, 0.8, -115.18616],
          [0.1, 0.9, -115.16443],
          [0.1, 1.0, -115.1389],
          [0.2, 0.0, -115.45551],
          [0.2, 0.1, -115.40605],
          [0.2, 0.2, -115.36668],
          [0.2, 0.3, -115.33625],
          [0.2, 0.4, -115.31404],
          [0.2, 0.5, -115.29997],
          [0.2, 0.6, -115.28156],
          [0.2, 0.7, -115.2704],
          [0.2, 0.8, -115.25097],
          [0.2, 0.9, -115.2314],
          [0.2, 1.0, -115.2088],
          [0.3, 0.0, -115.53599],
          [0.3, 0.1, -115.48135],
          [0.3, 0.2, -115.43617],
          [0.3, 0.3, -115.39964],
          [0.3, 0.4, -115.37228],
          [0.3, 0.5, -115.35354],
          [0.3, 0.6, -115.33915],
          [0.3, 0.7, -115.31502],
          [0.3, 0.8, -115.30233],
          [0.3, 0.9, -115.27664],
          [0.3, 1.0, -115.24946],
          [0.4, 0.0, -115.60195],
          [0.4, 0.1, -115.54214],
          [0.4, 0.2, -115.49106],
          [0.4, 0.3, -115.4487],
          [0.4, 0.4, -115.41977],
          [0.4, 0.5, -115.39414],
          [0.4, 0.6, -115.37067],
          [0.4, 0.7, -115.35617],
          [0.4, 0.8, -115.32604],
          [0.4, 0.9, -115.30612],
          [0.4, 1.0, -115.2827],
          [0.5, 0.0, -115.65082],
          [0.5, 0.1, -115.58622],
          [0.5, 0.2, -115.52942],
          [0.5, 0.3, -115.48177],
          [0.5, 0.4, -115.44397],
          [0.5, 0.5, -115.41554],
          [0.5, 0.6, -115.38787],
          [0.5, 0.7, -115.36943],
          [0.5, 0.8, -115.34848],
          [0.5, 0.9, -115.32167],
          [0.5, 1.0, -115.3021],
          [0.6, 0.0, -115.68083],
          [0.6, 0.1, -115.61185],
          [0.6, 0.2, -115.55009],
          [0.6, 0.3, -115.49816],
          [0.6, 0.4, -115.45575],
          [0.6, 0.5, -115.42019],
          [0.6, 0.6, -115.38795],
          [0.6, 0.7, -115.36201],
          [0.6, 0.8, -115.33797],
          [0.6, 0.9, -115.31872],
          [0.6, 1.0, -115.29329],
          [0.7, 0.0, -115.68954],
          [0.7, 0.1, -115.61643],
          [0.7, 0.2, -115.54948],
          [0.7, 0.3, -115.49069],
          [0.7, 0.4, -115.43889],
          [0.7, 0.5, -115.40191],
          [0.7, 0.6, -115.36575],
          [0.7, 0.7, -115.33551],
          [0.7, 0.8, -115.3117],
          [0.7, 0.9, -115.2887],
          [0.7, 1.0, -115.26275],
          [0.8, 0.0, -115.67468],
          [0.8, 0.1, -115.59734],
          [0.8, 0.2, -115.52527],
          [0.8, 0.3, -115.4607],
          [0.8, 0.4, -115.40832],
          [0.8, 0.5, -115.36054],
          [0.8, 0.6, -115.32066],
          [0.8, 0.7, -115.28815],
          [0.8, 0.8, -115.25959],
          [0.8, 0.9, -115.23166],
          [0.8, 1.0, -115.20645],
          [0.9, 0.0, -115.6406],
          [0.9, 0.1, -115.55396],
          [0.9, 0.2, -115.47541],
          [0.9, 0.3, -115.40445],
          [0.9, 0.4, -115.34266],
          [0.9, 0.5, -115.29309],
          [0.9, 0.6, -115.25536],
          [0.9, 0.7, -115.21718],
          [0.9, 0.8, -115.17818],
          [0.9, 0.9, -115.14658],
          [0.9, 1.0, -115.12189],
          [1.0, 0.0, -115.6138],
          [1.0, 0.1, -115.54527],
          [1.0, 0.2, -115.46841],
          [1.0, 0.3, -115.33366],
          [1.0, 0.4, -115.25256],
          [1.0, 0.5, -115.19991],
          [1.0, 0.6, -115.15444],
          [1.0, 0.7, -115.10713],
          [1.0, 0.8, -115.0643],
          [1.0, 0.9, -115.03703],
          [1.0, 1.0, -115.00805]]

energy_max = max(list(zip(*energy))[2])
energy_2d = []
for i in energy:
    if i[1] == 0:
        energy_2d.append([])
    energy_2d[-1].append(i[2] - energy_max)
'''
x compress from 2.66092 to 2.4;
z elong from 2.66092 to 3.2
energy_2d[0] z increase
energy_2d x increase
'''
fig, ax = plt.subplots()
im = ax.imshow(energy_2d, cmap=plt.cm.gray)
ax.set_xticks(np.arange(len(energy_2d[0])), np.round(np.linspace(2.66092, 3.2, 11), 2))
ax.set_yticks(np.arange(len(energy_2d)), np.round(np.linspace(2.66092, 2.4, 11), 2))
ax.set_xlabel("elongated z which from 2.66 to 3.20$\AA$")
ax.set_ylabel("compressed x which from 2.66 to 2.40$\AA$")
plt.setp(ax.get_xticklabels(), rotation=45, ha="right",
         rotation_mode="anchor")
for i in range(len(energy_2d)):
    for j in range(len(energy_2d[0])):
        ax.text(j, i, f"{energy_2d[i][j]:.2f}",
                ha="center", va="center", color="w",fontsize=8)
ax.set_title("selective dynamics Sb3+* in Cs2SnCl6\nwith conventional cell and PBE")
plt.colorbar(im)
fig.tight_layout()
#plt.show()
plt.savefig("Sb_pbe_selective.png",dpi=300)
